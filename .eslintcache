[{"E:\\Bacancy\\formsdemo\\src\\index.js":"1","E:\\Bacancy\\formsdemo\\src\\App.js":"2","E:\\Bacancy\\formsdemo\\src\\reportWebVitals.js":"3","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Form.js":"4","E:\\Bacancy\\formsdemo\\src\\Input\\Input.js":"5","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Reg2.js":"6","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\Login.js":"7","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Reg1.js":"8","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Registration.js":"9","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\LoggedIn\\LoggedIn.js":"10","E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\LoggedIn\\UserDetails\\UserDetails.js":"11","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\index.js":"12","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\App.js":"13","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\reportWebVitals.js":"14","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Form.js":"15","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Registration\\Reg1.js":"16","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\LoggedIn.js":"17","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\Login.js":"18","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\UserDetails\\UserDetails.js":"19","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Registration\\Reg2.js":"20","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\Input\\Input.js":"21","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\containers\\homePage\\homePage.js":"22","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\forgetPassword\\forgetPassword.js":"23","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\UserEducation\\UserEducation.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":323,"mtime":1611591295373,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":864,"mtime":1612172604647,"results":"29","hashOfConfig":"26"},{"size":1590,"mtime":1611996360383,"results":"30","hashOfConfig":"26"},{"size":5687,"mtime":1612114490256,"results":"31","hashOfConfig":"26"},{"size":3394,"mtime":1612172691473,"results":"32","hashOfConfig":"26"},{"size":5588,"mtime":1612157482880,"results":"33","hashOfConfig":"26"},{"size":1083,"mtime":1612098402483,"results":"34","hashOfConfig":"26"},{"size":928,"mtime":1612170498754,"results":"35","hashOfConfig":"26"},{"size":790,"mtime":1612170711030,"results":"36","hashOfConfig":"26"},{"size":500,"mtime":1612147608000,"results":"37","hashOfConfig":"38"},{"size":323,"mtime":1612147608000,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1612147608000,"results":"40","hashOfConfig":"38"},{"size":1204,"mtime":1612287175948,"results":"41","hashOfConfig":"38"},{"size":5730,"mtime":1612282647033,"results":"42","hashOfConfig":"38"},{"size":1182,"mtime":1612331768118,"results":"43","hashOfConfig":"38"},{"size":3904,"mtime":1612334764304,"results":"44","hashOfConfig":"38"},{"size":942,"mtime":1612328887089,"results":"45","hashOfConfig":"38"},{"size":6188,"mtime":1612355938568,"results":"46","hashOfConfig":"38"},{"size":1563,"mtime":1612267293611,"results":"47","hashOfConfig":"38"},{"size":569,"mtime":1612259447638,"results":"48","hashOfConfig":"38"},{"size":4128,"mtime":1612273673333,"results":"49","hashOfConfig":"38"},{"size":2306,"mtime":1612354771355,"results":"50","hashOfConfig":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"73zvux",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"w09qcr",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},"E:\\Bacancy\\formsdemo\\src\\index.js",[],["108","109"],"E:\\Bacancy\\formsdemo\\src\\App.js",[],"E:\\Bacancy\\formsdemo\\src\\reportWebVitals.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Form.js",[],"E:\\Bacancy\\formsdemo\\src\\Input\\Input.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Reg2.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\Login.js",["110","111"],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Reg1.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Registration\\Registration.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\LoggedIn\\LoggedIn.js",[],"E:\\Bacancy\\formsdemo\\src\\components\\Form\\Login\\LoggedIn\\UserDetails\\UserDetails.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\index.js",[],["112","113"],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Form.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Registration\\Reg1.js",["114","115"],"import React, { Component } from \"react\";\nimport Input from '../../../Input/Input';\nimport './Reg.css';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Reg1 extends Component{  \n  state={\n    forms:{\n      firstname:{\n        type:'input',\n        config:{\n          placeholder:'First Name',\n          name:'firstname',\n        },\n        value:'',\n        valid:false,\n        touched:false,\n        validation:{\n          required:true,\n          }\n      },\n      lastname:{\n        type:'input',\n        config:{\n          placeholder:'Last Name',\n          name:'lastname',\n        },\n        touched:false,\n        value:'',\n        valid:false,\n        validation:{\n          required:true,\n        }\n      },\n      email:{\n        type:'input',\n        config:{\n          placeholder:'E-mail',\n          name:'email',\n        },\n        value:'',\n        touched:false,\n        valid:false,    \n        validation:{\n          required:true,\n          isEmail:true\n        }\n      },\n      phone:{\n        type:'input',\n        config:{\n          placeholder:'Mobile Number',\n          name:'phone',\n         },\n         value:'',\n         touched:false,\n         valid:false,\n         validation:{\n           required:true,\n           isNumeric:true,\n           minLength:10,\n           maxLength:10\n         }\n      },\n      gender:{\n        type:'select',\n        config:{\n         options:[\n           {value:'Male', display:'Male'},\n           {value:'Female', display:'Female'},\n           {value:'Other', display:'Other'}\n         ]\n      }, \n      value:'Male',\n      valid:true,\n      validation:{}\n      },\n      password:{\n        type:'input',\n        config:{\n          placeholder:'Password',\n          type:'password',\n          name:'password',\n        },\n        touched:false,\n        value:'',\n        valid:false,\n        validation:{\n          required:true,\n        }\n      },\n      confirmpassword:{\n        type:'input',\n        config:{\n          placeholder:'Re-enter Password',\n          type:'password',\n          name:'confirmpassword',\n        },\n        touched:false,\n        value:'',\n        valid:false,\n        validation:{\n          required:true,\n          check:true\n        },     \n      }     \n    },\n    passwordcheck: true  ,\n    formisValid:false,\n }\n \n \n \n   checkValidity=(value,rules)=>{\n         \n    let isValid=true;\n   \n    if(!rules){\n      return true;\n    }\n\n     if(rules.required){\n    isValid=value.trim()!=='' && isValid\n    }\n\n     if(rules.isNumeric){\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid\n    }\n\n     if(rules.minLength){\n    isValid = value.length >= rules.minLength && isValid\n    }\n\n    if(rules.maxLength){\n    isValid = value.length <= rules.maxLength && isValid\n    }\n\n     if(rules.isEmail){\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid\n    }\n\n    if(rules.check){\n      let CPassword=value;\n      let password=this.state.forms['password'].value;\n      if (CPassword ===password) {\n          isValid=true;\n      }\n      else{\n        isValid=false;\n      }\n    }\n\n    return isValid;\n\n  }\n\n\n\n  onchangeHandler=(event,id)=>{\n   \n   let newforms={...this.state.forms};\n   let updated={...newforms[id]};   \n   updated.value=event.target.value;\n   newforms[id]=updated;\n   updated.touched=true;\n   updated.valid=this.checkValidity(updated.value,updated.validation) \n   newforms[id].value=updated.value;\n  \n   let formisValid=true;\n   for(let id in newforms){\n      formisValid=newforms[id].valid && formisValid\n  }\n  this.setState({\n       forms:newforms,\n       formisValid:formisValid\n})\n  \n\n  }\n\n   submit=(event)=>{\n  \n  // event.preventDefault();\n   \n\n   let firstname=this.state.forms.firstname.value;\n   let lastname=this.state.forms.lastname.value;\n   let password=this.state.forms.password.value;\n   let gender=this.state.forms.gender.value;\n   let email=this.state.forms.email.value;\n   let phone=this.state.forms.phone.value;\n   let userdata={'firstname':firstname,'lastname':lastname,'password':password,'gender':gender,'email':email,'phone':phone}\n    \n    localStorage.setItem('info',JSON.stringify(userdata));\n    alert(\"registartion  Step 1 Completed\");\n  this.props.history.push('/Registration2');  \n \n   }\n\n\n  componentDidMount(){\n\n    let useForms=JSON.parse(localStorage.getItem('info'));\n    if(useForms){\n\n      let forms={...this.state.forms}\n\n      for(let id in forms){\n        forms[id].value=useForms[id];\n        forms[id].touched=true;\n        forms[id].valid=true;\n\n      }\n\n      this.setState({forms:forms,formisValid:true})\n    }\n\n\n  } \n\n  render(){ \n  \n    let formsKeys=[];\n    for(let key in this.state.forms){\n      formsKeys.push(\n       {\n         id:key,\n         para:this.state.forms[key]\n       }   \n      )\n    }\n  return (\n    <div className=\"Reg\" >\n      <h1>WelCome to Registration Page</h1><br/>\n      <h5>Pl Enter Your valid details</h5><br/>\n      <h4>Personal Details</h4>\n     \n     <form>\n      { \n         formsKeys.map(elem=>(\n         <div>     \n         <Input inputtype={elem.para.type}\n          configuration={elem.para.config}\n          value={elem.para.value}\n          key={elem.id}        \n          valid={!elem.para.valid}\n          shouldvalidate={elem.para.validation}\n          touched={elem.para.touched}\n          changed={(event)=>this.onchangeHandler(event,elem.id)}       \n           />         \n            </div>\n      ))}   \n\n<button disabled={!this.state.formisValid} type=\"submit\" onClick={this.submit}>Next</button>   \n     </form>\n     \n    </div>\n  );\n}\n}\nexport default Reg1;","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\LoggedIn.js",["116"],"import React,{Component} from 'react';\nimport {NavLink,Route,Redirect} from 'react-router-dom';\nimport UserDetails from './UserDetails/UserDetails';\nimport './LoggedIn.css';\nimport UserEducation from './UserEducation/UserEducation';\n\nclass LoggedIn extends Component{\n    render(){\n        \n        let activeUserFname=localStorage.getItem('activeUserFname');\n        let activeUserLname=localStorage.getItem('activeUserLname');\n      \n    return(\n        \n        <div>\n            <h1>Welcome To Admin Panel!!!</h1><br/><br/>\n            <h3>Hello {activeUserFname} {activeUserLname}</h3>\n            <table>\n                <thead>\n                    <td> <NavLink to='/loggedin' >Home </NavLink></td>\n                    <td> <NavLink to='/loggedin/userdetails'>User details</NavLink></td>\n                    <td> <NavLink to='/loggedin/usereducation'>User education </NavLink></td>\n                </thead>\n            </table>\n       \n      \n      \n       \n            \n            <Route path='/loggedin/userdetails' component={UserDetails} />\n            <Route path='/loggedin/usereducation' component={UserEducation} />\n        </div>\n\n    )\n}\n}\nexport default LoggedIn;","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\Login.js",["117","118","119"],"import React,{Component} from 'react';\nimport Input from '../../../Input/Input';\nimport LoggedIn from './LoggedIn/LoggedIn';\nimport {NavLink,Route,Link} from 'react-router-dom';\nclass Login extends Component{\n    state={\n        userData:null,\n        fname:'',\n        lname:'',\n        password:'',\n        forms:{\n            firstname:{\n              type:'input',\n              config:{\n                placeholder:'First Name',\n                name:'firstname',\n              },\n              value:'',\n              valid:false,\n              touched:false,\n              validation:{\n                required:true,          \n              }\n            },\n            password:{\n                type:'input',\n                config:{\n                  placeholder:'Password',\n                  type:'password',\n                  name:'password',\n                },\n                touched:false,\n                value:'',\n                valid:false,             \n                validation:{\n                  required:true,\n                }\n              }\n            },\n         \n    }\n    componentDidMount(){\n        const fname=localStorage.getItem('First name');\n        const lname=localStorage.getItem('Last name');\n        const password=localStorage.getItem('Password');\n        this.setState({\n            fname:fname,\n            lname:lname,\n            password:password\n        })\n    }\n    onchangeHandler=(event,id)=>{\n        let newforms={...this.state.forms};\n       let updated={...newforms[id]};   \n       updated.value=event.target.value;\n       newforms[id]=updated;\n    this.setState({\n    forms:newforms,\n    })\n      }\n      match=(e)=>{\n        e.preventDefault();\n        // const data=localStorage.getItem([]);\n        const info=JSON.parse(localStorage.getItem('userInfo'));\n        \n        const fnamefromstate=this.state.forms.firstname.value\n        const passfromstate=this.state.forms.password.value\n        \n       \n        let check=false;\n        for(let x in info){\n          let m=info[x];\n          let m1=m['Reg1'];\n          let fname=m1['firstname'];\n          let lname=m1['lastname'];\n          let ps=m1['password'];\n        if(fnamefromstate===fname && passfromstate===ps){\n           check=true;\n           localStorage.setItem('activeUserFname', fname);\n           localStorage.setItem('activeUserLname', lname);\n           localStorage.setItem('activeUserNumber',x);\n           console.log('x'+x);\n           break;\n        }\n        else{\n          check=false;\n           \n          }\n        }\n      \n        if(check){\n          this.props.history.push('/loggedin')\n      }\n      else{\n          alert('Write Correct Id & passsword')\n         \n        }\n      \n      \n  }\n\n    render(){\n        let formsDemo=[];\n        for(let key in this.state.forms){\n          formsDemo.push(\n           {\n             id:key,\n             inform:this.state.forms[key]\n           }   \n          )\n        }\n        return(\n            <div>\n\n          <h1>Welcome To Login Page</h1>\n\n\n        { \n          formsDemo.map(elem=>(\n          <div>     \n         <Input inputtype={elem.inform.type}\n          configuration={elem.inform.config}\n          value={elem.inform.value}\n          key={elem.id}        \n          changed={(event)=>this.onchangeHandler(event,elem.id)}   \n           />         \n            </div>\n      ))}  \n      <button  onClick={this.match}>Login</button> <br/><br/>\n      \n      <Link to=\"/forgetPassword\"><button>Forgot Password?</button><br/><br/></Link>\n      \n      <h2>New User??</h2> <Link to=\"/Registration1\"><button>Registration</button></Link>\n      {/* <Route path= '/loggedin'  component={LoggedIn}/> */}\n           {/* {this.state.proceed?<Route path='/loggedin' component={LoggedIn} firstname={this.state.fname} lastname={this.state.lname}/>:null} */}\n            </div>\n        )\n    }\n}\nexport default Login;","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\UserDetails\\UserDetails.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Registration\\Reg2.js",["120","121"],"import React,{Component} from 'react';\nimport Input from '../../../Input/Input';\nimport {Link} from 'react-router-dom';\nimport './Reg2.css';\nimport Reg1 from './Reg1';\nclass Reg2 extends Component{\n    state={\n        form2:{\n            sclname:{\n                type:'input',\n                config:{\n                  placeholder:'Institute/School Name',\n                  name:'sclname',\n                },\n                value:'',\n                valid:false,\n                touched:false,\n                validation:{\n                  required:true,\n                 minLength:4 \n                }\n              },\n              percent:{\n                type:'input',\n                config:{\n                  placeholder:'Percentage/CGPA',\n                  name:'percent',\n                },\n                value:'',\n                valid:false,\n                touched:false,\n                validation:{\n                  required:true,\n                  isNumeric:true,\n                  \n                }\n              },\n              course:{\n                type:'input',\n                config:{\n                  placeholder:'Course/Stream',\n                  name:'course',\n                },\n                value:'',\n                valid:false,\n                touched:false,\n                validation:{\n                  required:true,\n                  \n                }\n              },\n              sdate:{\n                type:'date',\n                config:{\n                  placeholder:'Starting date',\n                  name:'sdate',\n                },\n                value:'',\n                valid:false,\n                touched:false,\n                validation:{\n                  required:true,\n                  \n                }\n              },\n              edate:{\n                type:'date',\n                config:{\n                  placeholder:'Course/Stream',\n                  name:'edate',\n                },\n                value:'',\n                valid:false,\n                touched:false,\n                validation:{\n                  required:true,                 \n                }\n              }\n              \n        },\n        addData:[],\n        userInfo:[],\n        formisValid:false\n    }\n\n\n\n    checkValidity=(value,rules)=>{\n\n      let isValid=true;\n      if(!rules){\n        return true;\n      }\n      \n      if(rules.required){\n        isValid=value.trim()!=='' && isValid\n      }\n      \n      if(rules.isNumeric){\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n      }\n\n      if (rules.isPercent) {\n        let pattern=/[0-9].[0-9]$/;\n        isValid =  pattern.test(value) && isValid\n      }\n\n      return isValid; \n    }  \n\n    onchangeHandler=(event,id)=>{\n      \n      let newforms={...this.state.form2};\n      let updated={...newforms[id]};   \n      updated.value=event.target.value;\n      newforms[id]=updated;\n      updated.touched=true;\n      updated.valid=this.checkValidity(updated.value,updated.validation) \n      newforms[id].value=updated.value;\n     \n      let formisValid=true;\n      for(let id in newforms){\n         formisValid=newforms[id].valid && formisValid\n     }\n     this.setState({\n          form2:newforms,\n          formisValid:formisValid\n   })\n        \n      }\n\n      submitted=(e)=>{\n\n        e.preventDefault();\n         let reg1=JSON.parse(localStorage.getItem('info'));\n        let reg2=JSON.parse(localStorage.getItem('Reg2'));\n        let userInfos=JSON.parse(localStorage.getItem('userInfo'));\n        let userInfo=[];\n        userInfo=userInfos;\n        userInfo.push({Reg1:reg1,Reg2:reg2});\n      \n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        console.log(\"reg2\"+reg2);\n        let m1=reg2[0];\n        let m2=m1[\"course\"];\n        console.log(\"m2\"+m2);\n        localStorage.removeItem('Reg2');\n        localStorage.removeItem('info');\n      \n        // this.setState({addData:eduinfo});\n        // localStorage.setItem('Educational info',JSON.stringify(eduinfo));\n        this.props.history.push('/login');\n      }\n\n      previous=(props)=>{\n        this.props.history.push('/Registration1');\n      \n      }\n      addMore=()=>{\n        \n                \n        const updatedForm2 = {\n         ...this.state.form2\n        }\n        \n        const addCopyData = [\n          ...this.state.addData\n       ]\n      \n       addCopyData.push(updatedForm2);\n       console.log(\"reg 2 add more is call and\"+addCopyData);\n      localStorage.setItem('Reg2', JSON.stringify(addCopyData))\n        \n               \n      for(let id in updatedForm2) {\n        updatedForm2[id].touched = false;\n        updatedForm2[id].value = '';\n        updatedForm2[id].valid = false;\n        \n      }\n      this.setState({ form2: updatedForm2, addData: addCopyData, formisValid: false })\n      }\n        \n      \n    render(){\n        let loadform=[];\n        for(let key in  this.state.form2){\n            loadform.push({\n                id:key,\n                info:this.state.form2[key]\n            })\n        \n        }\n        return(\n            <div className='Reg2'>\n              <h1>WelCome to Registration Page</h1><br/>\n              <h5>Pl Enter Your valid details</h5><br/>\n              <h4>Educational Details</h4>\n                <form>\n               \n            {\n            loadform.map(elem=>(\n                <Input inputtype={elem.info.type}\n                configuration={elem.info.config}\n                value={elem.info.value}\n                key={elem.id}        \n                valid={!elem.info.valid}\n                shouldvalidate={elem.info.validation}\n                touched={elem.info.touched}\n                changed={(event)=>this.onchangeHandler(event,elem.id)}\n               />\n            ))}\n            <button onClick={this.previous}>Previous</button>\n            <button disabled={!this.state.formisValid}onClick={this.addMore}>Add More Data</button>\n                <button disabled={!this.state.formisValid} onClick={this.submitted}>Register</button> \n                </form>\n              \n                \n             \n            </div>\n        )\n    }\n}\nexport default Reg2;","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\Input\\Input.js",[],["122","123"],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\containers\\homePage\\homePage.js",[],"C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\forgetPassword\\forgetPassword.js",["124","125"],"import React,{Component} from 'react';\r\nimport Input from '../../Input/Input';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nclass forgetPassword extends Component{\r\n    state={\r\n\r\n        forms:{\r\n            oldPassword:{\r\n                type:'input',\r\n                config:{\r\n                    placeholder:\"Old Password\",\r\n                    name:\"oldps\"\r\n                },\r\n                value:'',\r\n                data:true,\r\n                valid:false,\r\n                touched:false,\r\n                validation:{\r\n                    required:true\r\n                }\r\n            },\r\n            newPassword:{\r\n                type:'input',\r\n                config:{\r\n                    placeholder:\"New Password\",\r\n                    name:\"newps\"\r\n                },\r\n                value:'',\r\n                check:true,\r\n                valid:false,\r\n                touched:false,\r\n                validation:{\r\n                    required:true\r\n                }\r\n            },\r\n        },\r\n        formisValid:false\r\n    }\r\n    checkValidity=(value,rules)=>{\r\n         \r\n        let isValid=true;\r\n       \r\n        if(!rules){\r\n          return true;\r\n        }\r\n    \r\n        \r\n    \r\n        if(rules.check){\r\n          let CPassword=value;\r\n          let password=this.state.forms['oldPassword'].value;\r\n          if (CPassword===password) {\r\n              isValid=true;\r\n          }\r\n          else{\r\n            isValid=false;\r\n          }\r\n        }\r\n    \r\n        return isValid;\r\n    \r\n      }\r\n    onchangeHandler=(event,id)=>{\r\n    // alert();\r\n     let newforms={...this.state.forms};\r\n     let updated={...newforms[id]};   \r\n     updated.value=event.target.value;\r\n     newforms[id]=updated;\r\n     updated.touched=true;\r\n     updated.valid=this.checkValidity(updated.value,updated.validation) \r\n     newforms[id].value=updated.value;\r\n    \r\n     let formisValid=true;\r\n     for(let id in newforms){\r\n        formisValid=newforms[id].valid && formisValid\r\n    }\r\n    this.setState({\r\n         forms:newforms,\r\n         formisValid:formisValid\r\n  \r\n    })\r\n    console.log(\"old\"+this.state.forms[\"oldPassword\"].value);\r\n    console.log(\"new\"+this.state.forms[\"newPassword\"].value);\r\n    \r\n  }\r\n\r\n  check=(event)=>{\r\n    event.preventDefault();\r\n\r\n    let oldData=JSON.parse(localStorage.getItem('info'));\r\n    let oldPassword1=oldData[\"password\"];\r\n    let oldPassword2=this.state.forms[\"oldPassword\"].value;\r\n    let newPassword=this.state.forms[\"newPassword\"].value;\r\n\r\n    if(oldPassword1===oldPassword2){\r\n        if(oldPassword1===newPassword){\r\n            alert(\"old passsword cannot be new Password!!\");\r\n        }\r\n        else{\r\n            alert(\"Password Change Successfully\");\r\n            oldData[\"password\"]=newPassword;\r\n            localStorage.setItem('info',JSON.stringify(oldData));\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n    else{\r\n        alert(\"old password is not matching!!1\");\r\n    }\r\n  }\r\n    render(){\r\n        let formsKeys=[];\r\n        for(let key in this.state.forms){\r\n          formsKeys.push(\r\n           {\r\n             id:key,\r\n             para:this.state.forms[key]\r\n           }   \r\n          )\r\n        }\r\n        return(\r\n            <div>\r\n                <h2>Password Changing Page</h2>\r\n                <form onSubmit={this.check}>\r\n                { \r\n                    formsKeys.map(elem=>(\r\n                    <div>     \r\n                    <Input inputtype={elem.para.type}\r\n                    configuration={elem.para.config}\r\n                    value={elem.para.value}\r\n                    key={elem.id}        \r\n                    valid={!elem.para.valid}\r\n                    shouldvalidate={elem.para.validation}\r\n                    touched={elem.para.touched}\r\n                    changed={(event)=>this.onchangeHandler(event,elem.id)}       \r\n                    />         \r\n            </div>\r\n      ))}  \r\n\r\n                        <button type=\"Submit\" onClick={this.check}>Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default forgetPassword;","C:\\Users\\HP\\Desktop\\adminpanel-master\\src\\components\\Form\\Login\\LoggedIn\\UserEducation\\UserEducation.js",["126"],"import React,{Component} from 'react';\r\nimport './UserEducation.css';\r\n\r\nclass UserEducation extends Component{\r\n    \r\n    edit=(id)=>{\r\n        alert('edit called'+id);\r\n    }\r\n    \r\n    delete=(id)=>{\r\n        alert('delete called'+id);\r\n    }\r\n    makeup=(q1)=>{\r\n        return(\r\n        <tr>\r\n            <td>{q1['sclname'].value}</td>\r\n          \r\n            <td>{q1['course'].value}</td>\r\n            <td>{q1['percent'].value}</td>\r\n            <td>{q1['sdate'].value}</td>\r\n            <td>{q1['edate'].value}</td>\r\n            <td><button onClick={this.edit}>Edit</button></td>\r\n            <td><button onClick={this.delete}>Delete</button></td>\r\n        </tr>\r\n        );\r\n        \r\n    }\r\n\r\n    render(){\r\n        const info=JSON.parse(localStorage.getItem('userInfo'));\r\n       let x=localStorage.getItem('activeUserNumber');\r\n        let m=info[x];\r\n        let m1=m['Reg2'];\r\n        let data='';\r\n        let dataArray=[];\r\n        console.log(\"result\"+m1.length);\r\n        for(let i=0;i<m1.length;i++){\r\n    \r\n            let q1=m1[i];\r\n            let q2=q1['course'].value;\r\n            // <tr>\r\n            //     <td>{q1['sclname'].value}</td>\r\n            //     {console.log(q1['course'].value)}\r\n            //     <td>{q1['course'].value}</td>\r\n            //     <td>{q1['percent'].value}</td>\r\n            //     <td>{q1['sdate'].value}</td>\r\n            //     <td>{q1['edate'].value}</td>\r\n            // </tr>\r\n            data=this.makeup(q1);\r\n            dataArray.push(data);\r\n        \r\n      \r\n        \r\n      // console.log(\"cousre\"+q2);\r\n        }\r\n    console.log(\"data\"+data.typeof);\r\n        \r\n        \r\n        return(\r\n            <div><br/><br/>\r\n               <table>\r\n                   <thead>\r\n                      \r\n                       <td>Sclname</td>\r\n                       <td>course</td>\r\n                       <td>percent</td>\r\n                       <td>Starting Date</td>\r\n                       <td>Ending Date</td>\r\n                       <td>Edit</td>\r\n                       <td>delete</td>\r\n                       \r\n                       </thead><br/>\r\n                   <tbody>\r\n                   {dataArray}\r\n                   </tbody>\r\n               </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UserEducation;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"135","line":4,"column":17,"nodeType":"133","messageId":"134","endLine":4,"endColumn":22},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","replacedBy":"137"},{"ruleId":"131","severity":1,"message":"138","line":4,"column":9,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"139","line":4,"column":15,"nodeType":"133","messageId":"134","endLine":4,"endColumn":23},{"ruleId":"131","severity":1,"message":"139","line":2,"column":23,"nodeType":"133","messageId":"134","endLine":2,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"140","line":4,"column":9,"nodeType":"133","messageId":"134","endLine":4,"endColumn":16},{"ruleId":"131","severity":1,"message":"135","line":4,"column":17,"nodeType":"133","messageId":"134","endLine":4,"endColumn":22},{"ruleId":"131","severity":1,"message":"138","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"141","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":12},{"ruleId":"127","replacedBy":"142"},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","severity":1,"message":"138","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"139","line":3,"column":15,"nodeType":"133","messageId":"134","endLine":3,"endColumn":23},{"ruleId":"131","severity":1,"message":"144","line":40,"column":17,"nodeType":"133","messageId":"134","endLine":40,"endColumn":19},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'LoggedIn' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.",["145"],["146"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'Reg1' is defined but never used.",["145"],["146"],"'q2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]